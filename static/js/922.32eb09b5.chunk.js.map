{"version":3,"file":"static/js/922.32eb09b5.chunk.js","mappings":"4OAEMA,E,OAAcC,EAAAA,OAAa,CAC/BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAMAC,EAAO,mCAAG,sGACEL,EAAYM,IAAI,oBADlB,uBACbC,EADa,EACbA,KADa,kBAEdA,EAAKC,SAFS,2CAAH,qDCVpB,EAAwB,oBAAxB,EAAmD,mB,SC2DnD,EAtDa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBF,GAAa,GAFG,SAGIV,IAHJ,OAGVK,EAHU,OAIhBC,EAASD,GAJO,gDAMhBG,EAAS,KAAMK,SANC,yBAQhBH,GAAa,GARG,4EAAH,qDAWjBE,GACD,GAAE,KAGD,4BACiB,IAAdH,IAAsB,uCACjB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOO,QAAS,IAAK,yDACtB,eAAIC,UAAWC,EAAf,4BACCC,MAAMC,QAAQb,IACbA,EAAMc,KAAI,SAAAC,GACR,OACEA,EAAKC,QACH,SAAC,KAAD,CAEEN,UAAWC,EACXM,GAAE,kBAAaF,EAAKG,IAHtB,UAKE,yBACE,wBAAKH,EAAKC,WALPD,EAAKG,GAUjB,MAGR,C","sources":["services/api-home.js","webpack://goit-react-hw-05-movies/./src/pages/home/Home.module.css?1311","pages/home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst postService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: \"992077ad7a114ae4ce553bc055aefd4f\",\n    \n  \n  }   \n})\n\nexport const getPost = async () => {\n  const { data } = await postService.get('trending/all/day')\n  return data.results\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Title\":\"Home_Title__rCPS5\",\"Link\":\"Home_Link__UfW+3\"};","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getPost } from 'services/api-home';\nimport PropTypes from 'prop-types';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const searchFilms = async () => {\n      try {\n        setIsLoading(true);\n        const films = await getPost();\n        setFilms(films);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    searchFilms();\n  }, []);\n\n  return (\n    <div>\n      {isLoading === true && <p>Loading...</p>}\n      {error?.length > 0 && <p>Oops,something went wrong...</p>}\n      <h1 className={css.Title}>Trending today</h1>\n      {Array.isArray(films) &&\n        films.map(film => {\n          return (\n            film.title && (\n              <Link\n                key={film.id}\n                className={css.Link}\n                to={`/movies/${film.id}`}\n              >\n                <ul>\n                  <li>{film.title}</li>\n                </ul>\n              </Link>\n            )\n          );\n        })}\n    </div>\n  );\n};\n\nHome.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default Home;\n"],"names":["postService","axios","baseURL","params","api_key","getPost","get","data","results","useState","films","setFilms","error","setError","isLoading","setIsLoading","useEffect","searchFilms","message","length","className","css","Array","isArray","map","film","title","to","id"],"sourceRoot":""}