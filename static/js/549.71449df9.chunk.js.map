{"version":3,"file":"static/js/549.71449df9.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/searchBar/SearchBar.module.css?1f80","components/searchBar/Searchbar.jsx","services/api-movies.js","webpack://goit-react-hw-05-movies/./src/pages/movies/Movies.module.css?c186","pages/movies/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchBar_Searchbar__mcDLP\",\"SearchForm\":\"SearchBar_SearchForm__2EgeS\",\"SearchFormBtn\":\"SearchBar_SearchFormBtn__U9Scu\",\"Label\":\"SearchBar_Label__9TK8X\",\"Input\":\"SearchBar_Input__iwqYS\"};","import { useState } from 'react';\nimport css from '../searchBar/SearchBar.module.css';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [searchMovie, setSearchMovie] = useState('');\n\n  const handleNameChange = event => {\n    setSearchMovie(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchMovie.trim() === '') {\n      toast.error('Fill in the search field');\n      return;\n    }\n\n    onSubmit(searchMovie);\n    setSearchMovie('');\n  };\n\n  return (\n    <header className={css.Searchbar}>\n      <form onSubmit={handleSubmit} className={css.SearchForm}>\n        <button type=\"submit\" className={css.SearchFormBtn}>\n          <span className={css.Label}>Search</span>\n        </button>\n\n        <input\n          className={css.Input}\n          type=\"text\"\n          name=\"searchMovie\"\n          placeholder=\"Search movies\"\n          value={searchMovie}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.protoTypes = {\n  handleSubmit: PropTypes.func,\n  searchMovie: PropTypes.string,\n  handleNameChange: PropTypes.func,\n};\n\nexport default Searchbar;\n","import axios from \"axios\";\n\nconst postService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: \"992077ad7a114ae4ce553bc055aefd4f\",\n    language:'en-US',\n    page: 1,\n    include_adult:'false',\n    \n  \n  }   \n})\n\nexport const getPostMovie = async (query) => {\n  const { data } = await postService.get(`search/movie?query=${query}`,)\n  return data.results\n}","// extracted by mini-css-extract-plugin\nexport default {\"Link\":\"Movies_Link__maiaw\"};","import Searchbar from 'components/searchBar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { getPostMovie } from 'services/api-movies';\nimport PropTypes from 'prop-types';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const searchMovie = searchParams.get('query');\n  const onSubmit = movie => {\n    setSearchParams({ query: movie });\n  };\n\n  useEffect(() => {\n    const fetchFilmsBySearchMovie = async searchMovie => {\n      try {\n        setIsLoading(true);\n        const films = await getPostMovie(searchMovie);\n        if (films.length === 0) {\n          toast.error(`Nothing found for request: ${searchMovie}`);\n          return;\n        }\n        setSearchFilms(films);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (searchMovie === null) return;\n    fetchFilmsBySearchMovie(searchMovie);\n  }, [searchMovie]);\n\n  return (\n    <div>\n      <Searchbar onSubmit={onSubmit} />\n      <div>\n        {isLoading === true && <p>Loading...</p>}\n        {error?.lenght > 0 && <p>Oops,something went wrong...</p>}\n        {Array.isArray(searchFilms) &&\n          searchFilms.map(film => {\n            return (\n              film.title && (\n                <Link\n                  key={film.id}\n                  className={css.Link}\n                  to={`/movies/${film.id}`}\n                  state={{ from: location }}\n                >\n                  <ul>\n                    <li>{film.title}</li>\n                  </ul>\n                </Link>\n              )\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  onSubmit: PropTypes.func,\n  searchFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\n\nexport default Movies;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Searchbar","onSubmit","useState","searchMovie","setSearchMovie","className","css","event","preventDefault","trim","toast","type","name","placeholder","value","onChange","currentTarget","toLowerCase","protoTypes","handleSubmit","PropTypes","handleNameChange","postService","axios","baseURL","params","api_key","language","page","include_adult","getPostMovie","query","get","data","results","useSearchParams","searchParams","setSearchParams","searchFilms","setSearchFilms","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","fetchFilmsBySearchMovie","films","length","message","movie","lenght","Array","isArray","map","film","title","to","id","state","from","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}